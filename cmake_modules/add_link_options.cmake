include(CMakeParseArguments)

function(add_link_options)
    set(options WITH_STATIC)
    set(oneValueArgs CONFIGURATION)
    set(multiValueArgs OPTIONS)
    cmake_parse_arguments(ALO "${options}" "${oneValueArgs}" "${multiValueArgs}" ${ARGN})

    set(CONFIGURATION_SUFFIX "")
    if(ALO_CONFIGURATION)
        string(TOUPPER "_${ALO_CONFIGURATION}" CONFIGURATION_SUFFIX)
    endif()

    set(NEW_LINKER_OPTIONS "")
    foreach(OPTION ${ALO_OPTIONS} ${ALO_UNPARSED_ARGUMENTS})
        string(APPEND NEW_LINKER_OPTIONS " ${OPTION}")
    endforeach()

    set(CMAKE_EXE_LINKER_FLAGS${CONFIGURATION_SUFFIX}    "${CMAKE_EXE_LINKER_FLAGS${CONFIGURATION_SUFFIX}}    ${NEW_LINKER_OPTIONS}" PARENT_SCOPE)
    set(CMAKE_MODULE_LINKER_FLAGS${CONFIGURATION_SUFFIX} "${CMAKE_MODULE_LINKER_FLAGS${CONFIGURATION_SUFFIX}} ${NEW_LINKER_OPTIONS}" PARENT_SCOPE)
    set(CMAKE_SHARED_LINKER_FLAGS${CONFIGURATION_SUFFIX} "${CMAKE_SHARED_LINKER_FLAGS${CONFIGURATION_SUFFIX}} ${NEW_LINKER_OPTIONS}" PARENT_SCOPE)
    if(ALO_WITH_STATIC)
        set(CMAKE_STATIC_LINKER_FLAGS${CONFIGURATION_SUFFIX} "${CMAKE_STATIC_LINKER_FLAGS${CONFIGURATION_SUFFIX}} ${NEW_LINKER_OPTIONS}" PARENT_SCOPE)
    endif()
endfunction()
